{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xbAcE844B57E841364E8b5b089177e2408cc556a3",
    "txHash": "0xbe1bb7dee3d676b46a6cdee1b380bc5265f52456ff3b9da69e362c2927012953"
  },
  "proxies": [
    {
      "address": "0x71BBF54E7d81F7E5BD7430Fd7C9fB39d9156E5e0",
      "txHash": "0x97c0a8a2f8eb9644d1feb38eef0d3e99e2fbdfdd133ac443d406650b0f9158a1",
      "kind": "transparent"
    },
    {
      "address": "0x5E7131298434f699B83A261F666d0d3BE15Fc76A",
      "txHash": "0x670e06a91cc9d983748ce118f848ecc9e8e7871147064bb37e6babe17377e043",
      "kind": "transparent"
    },
    {
      "address": "0x37aa8d6Fa4185c44B85207568d1698f3F8C7323f",
      "txHash": "0x092ca7918871fc9f436c06dc2f0b9f6711259ab694a761e698a3f2b659fdd9d5",
      "kind": "transparent"
    },
    {
      "address": "0x30fb8482BE50Bc8A7D20E1bD3812804E29C8c443",
      "txHash": "0xb3bbc28972283ac6404da5bffac3babc8817e350baf8076a8eb9f18bec0ad0c7",
      "kind": "transparent"
    }
  ],
  "impls": {
    "957db6785c3a84b3254541e92f0c6ac9e564dba958ef14534f1c64a51a06c19a": {
      "address": "0xf305b1D7D57B3eaf904BC0f6D48BA01f360F3b32",
      "txHash": "0xdcebb121c537bd5190757db7263207338c1f8e19fb788e13461abfb03b429ddc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "operators",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OperatorRole",
            "src": "contracts\\role-operator\\OperatorRole.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "01b665a667d3ebb640655aacd664c8696a648eeaba8b4c35de9a75b6f359c560": {
      "address": "0xeD904Cf49Cd0C38dAdEfD8118771a35b44c97853",
      "txHash": "0xa088c2b1be8052cbc406b076d63a62dadefe6d19732e470dcb6881559229e52a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_struct(UintSet)2236_storage)",
            "contract": "ERC721Upgradeable",
            "src": "contracts\\erc721rarible\\ERC721Upgradeable.sol:35"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "152",
            "type": "t_struct(UintToAddressMap)1613_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts\\erc721rarible\\ERC721Upgradeable.sol:38"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "contracts\\erc721rarible\\ERC721Upgradeable.sol:41"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "contracts\\erc721rarible\\ERC721Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "156",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts\\erc721rarible\\ERC721Upgradeable.sol:47"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts\\erc721rarible\\ERC721Upgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "contracts\\erc721rarible\\ERC721Upgradeable.sol:53"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "159",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts\\erc721rarible\\ERC721Upgradeable.sol:56"
          },
          {
            "label": "_burnedTokens",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ERC721Upgradeable",
            "src": "contracts\\erc721rarible\\ERC721Upgradeable.sol:93"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)40_storage",
            "contract": "ERC721Upgradeable",
            "src": "contracts\\erc721rarible\\ERC721Upgradeable.sol:495"
          },
          {
            "label": "defaultApprovals",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC721DefaultApproval",
            "src": "contracts\\erc721rarible\\ERC721DefaultApproval.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721DefaultApproval",
            "src": "contracts\\erc721rarible\\ERC721DefaultApproval.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "contracts\\erc721rarible\\ERC721BurnableUpgradeable.sol:40"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:27"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "303",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1271Validator",
            "src": "contracts\\erc-1271\\ERC1271Validator.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Mint721Validator",
            "src": "contracts\\Mint721Validator.sol:16"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)2759_storage)dyn_storage)",
            "contract": "AbstractRoyalties",
            "src": "@rarible\\royalties\\contracts\\impl\\AbstractRoyalties.sol:8"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)2759_storage)dyn_storage)",
            "contract": "ERC721Lazy",
            "src": "contracts\\erc721rarible\\ERC721Lazy.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721Lazy",
            "src": "contracts\\erc721rarible\\ERC721Lazy.sol:116"
          },
          {
            "label": "contractURI",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "HasContractURI",
            "src": "contracts\\HasContractURI.sol:9"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)49_storage",
            "contract": "HasContractURI",
            "src": "contracts\\HasContractURI.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "556",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721Base",
            "src": "contracts\\erc721rarible\\ERC721Base.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "606",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721Rarible",
            "src": "contracts\\erc721rarible\\ERC721Rarible.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)1287_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Part)2759_storage)dyn_storage": {
            "label": "struct LibPart.Part[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)2236_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)2759_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Map)1295_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1287_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)1287_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Part)2759_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)1850_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)2236_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1850_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)1613_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1295_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "c592883d8c8c5888f6874d71dd62ba67d690354dc0710c9d0b58e4206009d69b": {
      "address": "0xf241982EF540d91831727CA95Bf898D85a10Ab37",
      "txHash": "0x1819acde82024429ca04dd976d775a34aa1782f70696da14248d9b066e6c093d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "contracts\\erc-1155\\ERC1155Upgradeable.sol:27"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "contracts\\erc-1155\\ERC1155Upgradeable.sol:30"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "contracts\\erc-1155\\ERC1155Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "contracts\\erc-1155\\ERC1155Upgradeable.sol:421"
          },
          {
            "label": "defaultApprovals",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC1155DefaultApproval",
            "src": "contracts\\erc-1155\\ERC1155DefaultApproval.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155DefaultApproval",
            "src": "contracts\\erc-1155\\ERC1155DefaultApproval.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "contracts\\erc-1155\\ERC1155BurnableUpgradeable.sol:41"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155BaseURI",
            "src": "contracts\\erc-1155\\ERC1155BaseURI.sol:14"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "ERC1155BaseURI",
            "src": "contracts\\erc-1155\\ERC1155BaseURI.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BaseURI",
            "src": "contracts\\erc-1155\\ERC1155BaseURI.sol:69"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:27"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "355",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1271Validator",
            "src": "contracts\\erc-1271\\ERC1271Validator.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Mint1155Validator",
            "src": "contracts\\erc-1155\\Mint1155Validator.sol:16"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3891_storage)dyn_storage)",
            "contract": "AbstractRoyalties",
            "src": "@rarible\\royalties\\contracts\\impl\\AbstractRoyalties.sol:8"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "507",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)3891_storage)dyn_storage)",
            "contract": "ERC1155Lazy",
            "src": "contracts\\erc-1155\\ERC1155Lazy.sol:21"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "508",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155Lazy",
            "src": "contracts\\erc-1155\\ERC1155Lazy.sol:22"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155Lazy",
            "src": "contracts\\erc-1155\\ERC1155Lazy.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "510",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155Lazy",
            "src": "contracts\\erc-1155\\ERC1155Lazy.sol:150"
          },
          {
            "label": "contractURI",
            "offset": 0,
            "slot": "560",
            "type": "t_string_storage",
            "contract": "HasContractURI",
            "src": "contracts\\HasContractURI.sol:9"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "561",
            "type": "t_array(t_uint256)49_storage",
            "contract": "HasContractURI",
            "src": "contracts\\HasContractURI.sol:29"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "610",
            "type": "t_string_storage",
            "contract": "ERC1155Base",
            "src": "contracts\\erc-1155\\ERC1155Base.sol:13"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "611",
            "type": "t_string_storage",
            "contract": "ERC1155Base",
            "src": "contracts\\erc-1155\\ERC1155Base.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "612",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155Base",
            "src": "contracts\\erc-1155\\ERC1155Base.sol:89"
          },
          {
            "label": "isPrivate",
            "offset": 0,
            "slot": "662",
            "type": "t_bool",
            "contract": "IsPrivateCollection",
            "src": "contracts\\IsPrivateCollection.sol:7"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "663",
            "type": "t_array(t_uint256)49_storage",
            "contract": "IsPrivateCollection",
            "src": "contracts\\IsPrivateCollection.sol:9"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "712",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MinterAccessControl",
            "src": "contracts\\access\\MinterAccessControl.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "713",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MinterAccessControl",
            "src": "contracts\\access\\MinterAccessControl.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Part)3891_storage)dyn_storage": {
            "label": "struct LibPart.Part[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)3891_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Part)3891_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
