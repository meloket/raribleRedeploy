{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
    "txHash": "0xa2f4645c0d90a1b1541f2ff16b5df656d9086fbebd21496d67d2e92a05b25785"
  },
  "proxies": [
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xd35b137c59d03555366076248b8ebad3f33f9ddad4ade3c53dd7970c9b8ce354",
      "kind": "transparent"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x3e7cf255858198e175d043839fd89b21b41d3b06f7477ceb566a23e8fe00ae7e",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x656a57ff38fbd21f0765eea97ecdb8650e8eacff2513ecf6b174aa211c85160c",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xe56ac980e4f35cd9fd8308092e8598ac9f3637b9795766b13f77cdb5778739a7",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0xbe1d099882a26b723102687a205eb2b6a87c2069d8e1af9312778485f183a585",
      "kind": "transparent"
    },
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0xe903ca77d89dd91f6dfcfaa7c03b90d6ee0957c9102e819e49c63686b1450e93",
      "kind": "transparent"
    }
  ],
  "impls": {
    "ac532db99feea77c51bbdb64004cd1cec5385adbd7a7cff41a49241b0302b6d8": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x0c76ec82576e58c9c15d811dc02771baf1656a0c55f791bc2819673e4ec20720",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "royaltiesByTokenAndTokenId",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoyaltiesSet)6925_storage)",
            "contract": "RoyaltiesRegistry",
            "src": "@rarible\\royalties-registry\\contracts\\RoyaltiesRegistry.sol:29"
          },
          {
            "label": "royaltiesByToken",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_struct(RoyaltiesSet)6925_storage)",
            "contract": "RoyaltiesRegistry",
            "src": "@rarible\\royalties-registry\\contracts\\RoyaltiesRegistry.sol:31"
          },
          {
            "label": "royaltiesProviders",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RoyaltiesRegistry",
            "src": "@rarible\\royalties-registry\\contracts\\RoyaltiesRegistry.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)46_storage",
            "contract": "RoyaltiesRegistry",
            "src": "@rarible\\royalties-registry\\contracts\\RoyaltiesRegistry.sol:250"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Part)6603_storage)dyn_storage": {
            "label": "struct LibPart.Part[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(RoyaltiesSet)6925_storage)": {
            "label": "mapping(address => struct RoyaltiesRegistry.RoyaltiesSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoyaltiesSet)6925_storage)": {
            "label": "mapping(bytes32 => struct RoyaltiesRegistry.RoyaltiesSet)",
            "numberOfBytes": "32"
          },
          "t_struct(Part)6603_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoyaltiesSet)6925_storage": {
            "label": "struct RoyaltiesRegistry.RoyaltiesSet",
            "members": [
              {
                "label": "initialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royalties",
                "type": "t_array(t_struct(Part)6603_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "5b696b5526216ccf08353c9cab39a2b62444c3f5ebad97d381376a2b10c6a85c": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x3a313a954a17b42bf5682f297272adcb0075fab6e0926ff363a1c5e5c93ee22d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "label": "_holderTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_struct(UintSet)2620_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:35"
          },
          {
            "label": "_tokenOwners",
            "offset": 0,
            "slot": "152",
            "type": "t_struct(UintToAddressMap)1997_storage",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:38"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:41"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "156",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:47"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:50"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:53"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "159",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:56"
          },
          {
            "label": "_burnedTokens",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:93"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)40_storage",
            "contract": "ERC721Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Upgradeable.sol:495"
          },
          {
            "label": "defaultApprovals",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC721DefaultApproval",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721DefaultApproval.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721DefaultApproval",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721DefaultApproval.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721BurnableUpgradeable.sol:40"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:27"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "303",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1271Validator",
            "src": "@rarible\\tokens\\contracts\\erc-1271\\ERC1271Validator.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Mint721Validator",
            "src": "@rarible\\tokens\\contracts\\Mint721Validator.sol:16"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)",
            "contract": "AbstractRoyalties",
            "src": "@rarible\\royalties\\contracts\\impl\\AbstractRoyalties.sol:8"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)",
            "contract": "ERC721Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Lazy.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Lazy.sol:115"
          },
          {
            "label": "contractURI",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "HasContractURI",
            "src": "@rarible\\tokens\\contracts\\HasContractURI.sol:9"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "507",
            "type": "t_array(t_uint256)49_storage",
            "contract": "HasContractURI",
            "src": "@rarible\\tokens\\contracts\\HasContractURI.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "556",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721Base",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Base.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "606",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721Rarible",
            "src": "@rarible\\tokens\\contracts\\erc-721\\ERC721Rarible.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MapEntry)1671_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Part)6603_storage)dyn_storage": {
            "label": "struct LibPart.Part[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)2620_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Map)1679_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)1671_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MapEntry)1671_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Part)6603_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)2234_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)2620_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2234_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintToAddressMap)1997_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)1679_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "55242edc0498361f54af16aa478bbf745df33b91f66c493a579061e1438d5f0c": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0xd5c32190fae200c1c33381d5bc4ab2e1a25ec977bceedaf19698d2372c00c04d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "_supportedInterfaces",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes4,t_bool)",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\introspection\\ERC165Upgradeable.sol:59"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Upgradeable.sol:27"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Upgradeable.sol:30"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Upgradeable.sol:421"
          },
          {
            "label": "defaultApprovals",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ERC1155DefaultApproval",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155DefaultApproval.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155DefaultApproval",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155DefaultApproval.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155BurnableUpgradeable.sol:41"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155BaseURI",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155BaseURI.sol:14"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "ERC1155BaseURI",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155BaseURI.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BaseURI",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155BaseURI.sol:69"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "354",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:27"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "355",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1271Validator",
            "src": "@rarible\\tokens\\contracts\\erc-1271\\ERC1271Validator.sol:34"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "456",
            "type": "t_array(t_uint256)50_storage",
            "contract": "Mint1155Validator",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\Mint1155Validator.sol:16"
          },
          {
            "label": "royalties",
            "offset": 0,
            "slot": "506",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)",
            "contract": "AbstractRoyalties",
            "src": "@rarible\\royalties\\contracts\\impl\\AbstractRoyalties.sol:8"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "507",
            "type": "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)",
            "contract": "ERC1155Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Lazy.sol:20"
          },
          {
            "label": "supply",
            "offset": 0,
            "slot": "508",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Lazy.sol:21"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Lazy.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "510",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155Lazy",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Lazy.sol:149"
          },
          {
            "label": "contractURI",
            "offset": 0,
            "slot": "560",
            "type": "t_string_storage",
            "contract": "HasContractURI",
            "src": "@rarible\\tokens\\contracts\\HasContractURI.sol:9"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "561",
            "type": "t_array(t_uint256)49_storage",
            "contract": "HasContractURI",
            "src": "@rarible\\tokens\\contracts\\HasContractURI.sol:29"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "610",
            "type": "t_string_storage",
            "contract": "ERC1155Base",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Base.sol:13"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "611",
            "type": "t_string_storage",
            "contract": "ERC1155Base",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Base.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "612",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155Base",
            "src": "@rarible\\tokens\\contracts\\erc-1155\\ERC1155Base.sol:89"
          },
          {
            "label": "isPrivate",
            "offset": 0,
            "slot": "662",
            "type": "t_bool",
            "contract": "IsPrivateCollection",
            "src": "@rarible\\tokens\\contracts\\IsPrivateCollection.sol:7"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "663",
            "type": "t_array(t_uint256)49_storage",
            "contract": "IsPrivateCollection",
            "src": "@rarible\\tokens\\contracts\\IsPrivateCollection.sol:9"
          },
          {
            "label": "_minters",
            "offset": 0,
            "slot": "712",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MinterAccessControl",
            "src": "@rarible\\tokens\\contracts\\access\\MinterAccessControl.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "713",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MinterAccessControl",
            "src": "@rarible\\tokens\\contracts\\access\\MinterAccessControl.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Part)6603_storage)dyn_storage": {
            "label": "struct LibPart.Part[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Part)6603_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibPart.Part[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Part)6603_storage": {
            "label": "struct LibPart.Part",
            "members": [
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "beb3830a7f8e6c46f4f75421257b0f109660c9afeb5f3b3cd53db42f0ef29bb2": {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x8c7f1ff2611a3a28f561db849d6e43a2a31d7219677d8aa1ba82026a099856cf",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "label": "matchers",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes4,t_address)",
            "contract": "AssetMatcher",
            "src": "@rarible\\exchange-v2\\contracts\\AssetMatcher.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AssetMatcher",
            "src": "@rarible\\exchange-v2\\contracts\\AssetMatcher.sol:77"
          },
          {
            "label": "proxies",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes4,t_address)",
            "contract": "TransferExecutor",
            "src": "@rarible\\transfer-manager\\contracts\\TransferExecutor.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "TransferExecutor",
            "src": "@rarible\\transfer-manager\\contracts\\TransferExecutor.sol:74"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:27"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "202",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\drafts\\EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "OrderValidator",
            "src": "@rarible\\exchange-v2\\contracts\\OrderValidator.sol:52"
          },
          {
            "label": "fills",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ExchangeV2Core",
            "src": "@rarible\\exchange-v2\\contracts\\ExchangeV2Core.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ExchangeV2Core",
            "src": "@rarible\\exchange-v2\\contracts\\ExchangeV2Core.sol:291"
          },
          {
            "label": "protocolFee",
            "offset": 0,
            "slot": "351",
            "type": "t_uint256",
            "contract": "RaribleTransferManager",
            "src": "@rarible\\transfer-manager\\contracts\\RaribleTransferManager.sol:21"
          },
          {
            "label": "royaltiesRegistry",
            "offset": 0,
            "slot": "352",
            "type": "t_contract(IRoyaltiesProvider)3564",
            "contract": "RaribleTransferManager",
            "src": "@rarible\\transfer-manager\\contracts\\RaribleTransferManager.sol:22"
          },
          {
            "label": "defaultFeeReceiver",
            "offset": 0,
            "slot": "353",
            "type": "t_address",
            "contract": "RaribleTransferManager",
            "src": "@rarible\\transfer-manager\\contracts\\RaribleTransferManager.sol:24"
          },
          {
            "label": "feeReceivers",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "RaribleTransferManager",
            "src": "@rarible\\transfer-manager\\contracts\\RaribleTransferManager.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)46_storage",
            "contract": "RaribleTransferManager",
            "src": "@rarible\\transfer-manager\\contracts\\RaribleTransferManager.sol:271"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_contract(IRoyaltiesProvider)3564": {
            "label": "contract IRoyaltiesProvider",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_address)": {
            "label": "mapping(bytes4 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
